/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package reflection;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Arrays;

/**
 *
 * @author Nick
 */
public class Reflection {

    /**
     * @param args the command line arguments
     * @throws UnsupportedEncodingException 
     * @throws FileNotFoundException 
     * @throws ClassNotFoundException 
     */
    public static void main(String[] args) throws FileNotFoundException, UnsupportedEncodingException{
    	String c = null;
    	String directory = null;
		if (args.length != 2) System.out.println("missing arguments, please try again"); 
		else{
			try {
				c = args[0];//Class.forName(args[0]);
				directory = args[1];
			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
//			System.out.println(c.getName());
//			System.out.println(directory);
			File path = new File(directory);
			ArrayList<File> files = getDirectoryFiles(path);
//			System.out.println(files.toString());
			createOutput(c.getName(), files);
		}
    }
    public static void createOutput(String className, ArrayList<File> files) throws FileNotFoundException, UnsupportedEncodingException {
    	PrintWriter output = new PrintWriter("output.txt", "UTF-8");
    	output.println(":- discontiguous bcClass/3, bcMember/7.");
    	output.println(":- dynamic bcClass/3, bcMember/7.");
    	for (File file : files){
    		String filename = file.getName();
    		if (filename.endsWith(".class"))
    			output.println(className + file.getName());
    	}
    	output.close();
	}
	public static ArrayList<File> getDirectoryFiles(File dir) {
		File[] files = dir.listFiles();
		ArrayList<File> result = new ArrayList<File>();
		for (File file : files) {
			if (file.isDirectory()) {
				result.add(file);
				result.addAll(getDirectoryFiles(file));
			}
			else {
				result.add(file);
			}
		}
		return result;
	}

}
